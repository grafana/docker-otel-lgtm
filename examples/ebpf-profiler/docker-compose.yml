services:
  lgtm:
    image: grafana/otel-lgtm
    environment:
      ENABLE_LOGS_OTELCOL: true
      ENABLE_LOGS_PYROSCOPE: true
    networks:
      - otel-net
    ports:
      - "3000:3000"
      - "4317:4317"
      - "4318:4318"

  generate-traffic:
#    image: ubuntu:24.04
    build:
      dockerfile: generate-traffic.Dockerfile
#    command:
#      - "/bin/bash"
#      - "-c"
#      - >
#        watch 'curl -s http://java:8080/rolldice;
#        curl -s http://go:8081/rolldice;
#        curl -s http://python:8082/rolldice;
#        curl -s http://dotnet:8083/rolldice;
#        curl -s http://nodejs:8084/rolldice?rolls=5'
#      - 'wget -q http://java:8080/rolldice -O /dev/null || echo "error reaching java service"'
#      - >
#        'while true; do
#        wget -q http://java:8080/rolldice -O /dev/null || echo "error reaching java service";
#        wget -q http://go:8081/rolldice -O /dev/null || echo "error reaching go service";
#        wget -q http://python:8082/rolldice -O /dev/null || echo "error reaching python service";
#        wget -q http://dotnet:8083/rolldice -O /dev/null || echo "error reaching dotnet service";
#        wget -q http://nodejs:8084/rolldice -O /dev/null || echo "error reaching nodejs service";
#        sleep 1; done'
    networks:
      - otel-net
    depends_on:
      - java
      - python
      - dotnet
      - go
      - nodejs

  otel-ebpf-profiler:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["-collection-agent", "lgtm:4317", "-no-kernel-version-check", "-disable-tls"]
    hostname: ebpf-profiler
    privileged: true
    pid: "host"
    volumes:
      - /sys/kernel/debug:/sys/kernel/debug
      - /sys/fs/cgroup:/sys/fs/cgroup
      - /proc:/proc
    networks:
      - otel-net
    depends_on:
      - lgtm

  java:
    build:
      context: ../java
      dockerfile: ../java/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "rolldice"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4318
      OTEL_METRIC_EXPORT_INTERVAL: "5000" # so we don't have to wait 60s for metrics
      GRAFANA_ROLL_WAIT: "2000" # 2 seconds
    ports:
      - "8080:8080"
    networks:
      - otel-net
    depends_on:
      - lgtm

  go:
    build:
      context: ../go
      dockerfile: ../go/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "rolldice"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4318
      OTEL_METRIC_EXPORT_INTERVAL: "5000" # so we don't have to wait 60s for metrics
    ports:
      - "8081:8081"
    networks:
      - otel-net
    depends_on:
      - lgtm

  python:
    build:
      context: ../python
      dockerfile: ../python/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "rolldice"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4317
      OTEL_METRIC_EXPORT_INTERVAL: "5000" # so we don't have to wait 60s for metrics
    ports:
      - "8082:8082"
    networks:
      - otel-net
    depends_on:
      - lgtm

  dotnet:
    build:
      context: ../dotnet
      dockerfile: ../dotnet/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "rolldice"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4317
      OTEL_METRIC_EXPORT_INTERVAL: "5000" # so we don't have to wait 60s for metrics
    ports:
      - "8083:8083"
    networks:
      - otel-net
    depends_on:
      - lgtm

  nodejs:
    build:
      context: ../nodejs
      dockerfile: ../nodejs/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "rolldice"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4318
      OTEL_METRIC_EXPORT_INTERVAL: "5000" # so we don't have to wait 60s for metrics
    ports:
      - "8084:8084"
    networks:
      - otel-net
    depends_on:
      - lgtm

networks:
  otel-net:
    driver: bridge
