---
# OATS is an acceptance testing framework for OpenTelemetry - https://github.com/grafana/oats/tree/main/yaml
kubernetes:
  dir: k8s
  app-service: dice
  app-docker-file: Dockerfile
  app-docker-context: ..
  app-docker-tag: dice:1.1-SNAPSHOT
  app-docker-port: 8080
  import-images:
    - grafana/otel-lgtm:latest
input:
  - path: /rolldice
expected:
  logs:
    - logql: '{service_name="dice"} |~ `.*Anonymous player is rolling the dice:.*`'
      regexp: 'Anonymous player is rolling the dice: \d+' # uses formatted message
    - logql: '{service_name="dice"} |~ `.*simulating an error.*`'
      equals: "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: simulating an error] with root cause"
      attributes:
        deployment_environment: staging
        exception_message: "simulating an error"
        exception_type: "java.lang.RuntimeException"
        scope_name: "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]"
        service_name: dice
        service_namespace: shop
        service_version: 1.1
        severity_number: 17
        severity_text: SEVERE
        exception_stacktrace: "java.lang.RuntimeException: simulating an error\
          \n\tat com.grafana.example.RollController.index(RollController.java:23)\
          \n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\
          \n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\
          \n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)\
          \n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)\
          \n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\
          \n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)\
          \n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)\
          \n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\
          \n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\
          \n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\
          \n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\
          \n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\
          \n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\
          \n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\
          \n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\
          \n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\
          \n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.springframework.web.servlet.v6_0.OpenTelemetryHandlerMappingFilter.doFilter(OpenTelemetryHandlerMappingFilter.java:78)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\
          \n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\
          \n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\
          \n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\
          \n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\
          \n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\
          \n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\
          \n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\
          \n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\
          \n\tat org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:731)\
          \n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\
          \n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)\
          \n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\
          \n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\
          \n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)\
          \n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\
          \n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\
          \n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\
          \n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\
          \n\tat java.base/java.lang.Thread.run(Unknown Source)\n"
      attribute-regexp:
        flags: ".*" # from loki
        detected_level: ".*" # from loki
        observed_timestamp: ".*" # from loki
        # thread_name: ".*" # thread name is missing when there is an exception - has nothing to do with stdout logging
        span_id: ".*"
        trace_id: ".*"
        container_id: ".*"
        host_arch: ".*"
        host_name: ".*"
        os_description: ".*"
        os_type: ".*"
        process_command_args: ".*"
        process_executable_path: ".*"
        process_pid: ".*"
        process_runtime_description: ".*"
        process_runtime_name: ".*"
        process_runtime_version: ".*"
        service_instance_id: ".*"
        telemetry_distro_name: ".*"
        telemetry_distro_version: ".*"
        telemetry_sdk_language: ".*"
        telemetry_sdk_name: ".*"
        telemetry_sdk_version: ".*"

      no-extra-attributes: true
