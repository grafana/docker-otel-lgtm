apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  otel-collector-config.yaml: |-
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus/collector: # needed if you use the docker-lgtm image
        config:
          scrape_configs:
            - job_name: 'opentelemetry-collector'
              static_configs:
                - targets: [ 'localhost:8888' ]
      filelog/json-ecs:
        include:
          - /var/log/pods/*/*/*.log
        include_file_path: true
        operators:
          - id: container-parser
            type: container
          - id: router
            type: router
            routes:
              - output: json_parser
                expr: 'body matches "\\{[^{}]*\\}" == true'
          - id: json_parser
            type: json_parser
            on_error: drop_quiet
            body: attributes.message
            timestamp:
              parse_from: attributes["@timestamp"]
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            severity:
              parse_from: attributes["log.level"]
            trace:
              trace_id:
                parse_from: attributes.trace_id
              span_id:
                parse_from: attributes.span_id
            scope_name:
              parse_from: attributes["log.logger"]
          - id: move_service_namespace
            type: move
            if: 'attributes["service.namespace"] != nil'
            from: attributes["service.namespace"]
            to: resource["service.namespace"]
          - id: move_service_name
            type: move
            from: attributes["service.name"]
            to: resource["service.name"]
          - id: move_service_instance_id
            type: move
            if: 'attributes["service.instance.id"] != nil'
            from: attributes["service.instance.id"]
            to: resource["service.instance.id"]
          - id: move_deployment_environment
            type: move
            if: 'attributes["deployment.environment"] != nil'
            from: attributes["deployment.environment"]
            to: resource["deployment.environment"]
          - id: move_thread_name
            type: move
            from: attributes["process.thread.name"]
            to: attributes["thread.name"]
          - id: move_error_message
            type: move
            if: 'attributes["error.message"] != nil'
            from: attributes["error.message"]
            to: attributes["exception.message"]
          - id: move_error_type
            type: move
            if: 'attributes["error.type"] != nil'
            from: attributes["error.type"]
            to: attributes["exception.type"]
          - id: move_throwable_stacktrace
            type: move
            if: 'len(attributes["error.stack_trace"]) > 0'
            from: attributes["error.stack_trace"]
            to: attributes["exception.stacktrace"]
          - id: remove_logger_name
            type: remove
            field: attributes["log.logger"]
          - id: remove_timestamp
            type: remove
            field: attributes["@timestamp"]
          - id: remove_level
            type: remove
            field: attributes["log.level"]
          - id: remove_span_id
            if: 'attributes["span_id"] != nil'
            type: remove
            field: attributes.span_id
          - id: remove_trace_id
            if: 'attributes["trace_id"] != nil'
            type: remove
            field: attributes.trace_id
          - id: remove_message
            type: remove
            field: attributes.message
          - id: remove_ecs_version
            type: remove
            field: attributes["ecs.version"]
          - id: remove_ecs_event_dataset
            type: remove
            field: attributes["event.dataset"]
          - id: remove_trace_flags
            type: remove
            field: attributes["trace_flags"]
          - id: remove_logtag
            type: remove
            field: attributes.logtag
          - id: remove_file
            type: remove
            field: attributes["log.file.path"]
          - id: remove_filename
            type: remove
            field: attributes["log.file.name"]
          - id: remove_stream
            type: remove
            field: attributes["log.iostream"]
          - id: remove_time
            type: remove
            field: attributes.time

    processors:
      batch:
      resourcedetection:
        detectors: [ "env", "system" ]
        override: false

    exporters:
      otlphttp/metrics:
        endpoint: http://localhost:9090/api/v1/otlp
      otlphttp/traces:
        endpoint: http://localhost:4418
      otlphttp/logs:
        endpoint: http://localhost:3100/otlp
      debug/metrics:
        verbosity: detailed
      debug/traces:
        verbosity: detailed
      debug/logs:
        verbosity: detailed
      nop:

    service:
      pipelines:
        traces:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ otlphttp/traces ]
        metrics:
          receivers: [ otlp, prometheus/collector ]
          processors: [ batch ]
          exporters: [ otlphttp/metrics ]
        logs/otlp:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ otlphttp/logs ]
        logs/json-ecs:
          receivers: [ filelog/json-ecs ]
          processors: [ batch ]
          exporters: [ otlphttp/logs ]
          # exporters: [ otlphttp/logs, debug/logs ]  # Uncomment this line to enable debug logging
